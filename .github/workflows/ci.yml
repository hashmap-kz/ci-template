name: CI

on:
  push:
    branches:
      - "master"
      - "release/**"
  pull_request:
    branches:
      - "master"
      - "release/**"

jobs:
  ci_job:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Go Build Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}
      - name: Go Mod Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
      - name: Ensure gofmt
        run: test -z "$(gofmt -s -d .)"
      - name: Ensure go.mod is already tidied
        run: go mod tidy && git diff --exit-code
      - name: Run unit tests
        run: go test ./...

      # Uncomment these when you're ready to use GoReleaser
      #
      # - name: Install GoReleaser
      #   uses: goreleaser/goreleaser-action@v6
      #   with:
      #     install-only: true
      #
      # - name: Run GoReleaser (snapshot)
      #   run: make snapshot

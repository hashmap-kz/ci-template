name: Integration Tests

on:
  push:
    branches:
      - "master"
      - "release/**"
  pull_request:
    branches:
      - "master"
      - "release/**"

env:
  CACHE_FOLDER: ~/docker-images-${{ github.sha }}
  CACHE_FILE_DOCKER_PREFIX: ~/docker-images-${{ github.sha }}/docker_prefix.tgz
  IMAGES_CACHE_KEY: docker-images-${{ github.sha }}

jobs:
  build_images:
    name: Build images
    runs-on: ubuntu-latest
    steps:
      - name: Docker images caching
        id: cache-images
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.CACHE_FILE_DOCKER_PREFIX }}
          key: ${{ env.IMAGES_CACHE_KEY }}

      - name: Check out code into the Go module directory
        if: steps.cache-images.outputs.cache-hit != 'true'
        uses: actions/checkout@v4

      - name: Set up Go 1.x
        if: steps.cache-images.outputs.cache-hit != 'true'
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
        id: go

      - name: Get dependencies
        if: steps.cache-images.outputs.cache-hit != 'true'
        run: |
          go get -v -t -d ./...

      - name: Build images
        if: steps.cache-images.outputs.cache-hit != 'true'
        run: |
          docker compose build vm -f integration/environ/docker-compose.yml 
          mkdir -p ${CACHE_FOLDER}
          sudo rm -rf ${CACHE_FOLDER}/*
          docker save pgrwl/vm | gzip -c > ${CACHE_FILE_DOCKER_PREFIX}
          ls ${CACHE_FOLDER}          

name: Integration Tests

on:
  push:
    branches:
      - "master"
      - "release/**"
  pull_request:
    branches:
      - "master"
      - "release/**"

env:
  CACHE_FOLDER: docker-cache
  CACHE_FILE_DOCKER_PREFIX: docker-cache/docker_prefix.tgz
  IMAGES_CACHE_KEY: docker-images-${{ github.sha }}

jobs:
  build_images:
    name: Build images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Restore Docker image cache
        id: cache-images
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_FILE_DOCKER_PREFIX }}
          key: ${{ env.IMAGES_CACHE_KEY }}

      - name: Build Docker images and cache them
        if: steps.cache-images.outputs.cache-hit != 'true'
        run: |
          docker compose -f test/integration/environ/docker-compose.yml build vm
          mkdir -p ${{ env.CACHE_FOLDER }}
          docker save pgrwl/sshd | gzip -c > ${{ env.CACHE_FILE_DOCKER_PREFIX }}
          ls -lh ${{ env.CACHE_FOLDER }}

  test:
    name: Run integration tests
    runs-on: ubuntu-latest
    needs: [build_images]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Restore Docker image cache
        id: cache-images
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_FILE_DOCKER_PREFIX }}
          key: ${{ env.IMAGES_CACHE_KEY }}

      - name: Fail if cache is missing
        if: steps.cache-images.outputs.cache-hit != 'true'
        run: |
          echo "Docker image cache not found!"
          exit 1

      - name: Load Docker images from cache
        run: |
          gunzip -c ${{ env.CACHE_FILE_DOCKER_PREFIX }} | docker load

      - name: Run test (example step)
        run: |
          docker images
          docker ps
          go test ./test/integration/environ -v
